/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.AdminController;
import org.bson.Document;
import javax.swing.event.ListSelectionEvent;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.Component;
/**
 *
 * @author Felipe
 */
public class JFDenuncia extends javax.swing.JInternalFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(JFDenuncia.class.getName());
    
    private final AdminController controller = new AdminController();
    private DefaultListModel<String> listModel; // Usaremos String para a lista
    private Map<String, Document> mapSolicitacoes; 
    private Document denunciaSelecionada;
    
 
    
    public JFDenuncia() {
        initComponents();
        
        // Inicializa o Map e carrega a lista
        mapSolicitacoes = new HashMap<>(); 
        carregarLista(controller.getDenuncias());
        
        // Configurações do InternalFrame
        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gerenciar Denúncias");
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }
    
    // --- MÉTODOS DE DADOS E AUXILIARES (Adaptados para String/Map) ---

    private void carregarLista(List<Document> lista) {
        listModel = new DefaultListModel<>();  
        mapSolicitacoes.clear();
        
        for (Document d : lista) {
            String id = d.getString("_id");
            String razaoSocial = d.getString("razaoSocial");
            String status = d.containsKey("status") ? " (" + d.getString("status") + ")" : "";
            
            String chaveExibicao = id + " | " + razaoSocial + status;
            
            listModel.addElement(chaveExibicao);
            mapSolicitacoes.put(chaveExibicao, d);
        }
        
        jListDenuncias.setModel(listModel);
    }

    private void exibirDetalhes(ListSelectionEvent e) {
        if (!e.getValueIsAdjusting()) {
            
            String chaveSelecionada = jListDenuncias.getSelectedValue();
            
            if (chaveSelecionada == null || mapSolicitacoes.isEmpty()) {
                TADetalhesArea.setText("Selecione uma denúncia.");
                denunciaSelecionada = null;
                return;
            }
            
            // BUSCA O DOCUMENTO COMPLETO NO MAP
            denunciaSelecionada = mapSolicitacoes.get(chaveSelecionada);
            
            if (denunciaSelecionada == null) return;

            // Montagem do Texto
            String detalhes = String.format(
                "ID: %s\nRazão Social: %s\nCNPJ: %s\nEndereço: %s\nData Denúncia: %s\nLink Publicação: %s\nEmail: %s",
                denunciaSelecionada.getString("_id"), 
                denunciaSelecionada.getString("razaoSocial"),
                denunciaSelecionada.getString("cnpj"),
                denunciaSelecionada.getString("endereco"),
                denunciaSelecionada.getString("dataDenuncia"),
                denunciaSelecionada.getString("linkPublicacao"),
                denunciaSelecionada.getString("email")
            );
            TADetalhesArea.setText(detalhes);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JTFCampoPesquisa = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDenuncias = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        TADetalhesArea = new javax.swing.JTextArea();
        btnRemoverPublicacao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JTFCampoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTFCampoPesquisaActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquise por: ID, Razão Social, CNPJ");

        btnPesquisar.setText("Pesquisar");

        jListDenuncias.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListDenuncias.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListDenunciasValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jListDenuncias);

        TADetalhesArea.setColumns(20);
        TADetalhesArea.setRows(5);
        jScrollPane2.setViewportView(TADetalhesArea);

        btnRemoverPublicacao.setText("Remover Publicação");
        btnRemoverPublicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverPublicacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JTFCampoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoverPublicacao)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTFCampoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoverPublicacao)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JTFCampoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTFCampoPesquisaActionPerformed
        // TODO add your handling code here:
        final String termo = JTFCampoPesquisa.getText(); 
        carregarLista(controller.filtrarDenuncias(termo));
    }//GEN-LAST:event_JTFCampoPesquisaActionPerformed

    private void btnRemoverPublicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverPublicacaoActionPerformed
        // TODO add your handling code here:
        if (denunciaSelecionada == null) {
            JOptionPane.showMessageDialog(this, "Selecione um registro.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        final String idDenuncia = denunciaSelecionada.getString("_id");
        final String emailDestino = denunciaSelecionada.getString("email");

        String motivo = JOptionPane.showInputDialog(this, 
            "Informe o motivo da REMOÇÃO da publicação para o e-mail " + emailDestino + ":");
        
        if (motivo != null && !motivo.trim().isEmpty()) {
            if (controller.removerPublicacao(idDenuncia)) {
                JOptionPane.showMessageDialog(this, 
                    "Publicação removida e motivo enviado para " + emailDestino + 
                    ". Status atualizado.", 
                    "Denúncia Aprovada", JOptionPane.INFORMATION_MESSAGE);
                carregarLista(controller.getDenuncias()); // Recarrega
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao tentar remover publicação.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRemoverPublicacaoActionPerformed

    private void jListDenunciasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListDenunciasValueChanged
        // TODO add your handling code here:
        exibirDetalhes(evt);
    }//GEN-LAST:event_jListDenunciasValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new JFDenuncia().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFCampoPesquisa;
    private javax.swing.JTextArea TADetalhesArea;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnRemoverPublicacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jListDenuncias;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
